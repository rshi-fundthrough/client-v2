import React from 'react';
import axios from 'axios';
import './App.css';
// import { render } from 'react-dom';
import BookInfoRow from "./components/BookInfoRow.js";

class App extends React.Component {
  // check if the database has any books, if none then populate with ones from NYT
  constructor(props){
    super(props);
    this.state = {
      bookInfo: []
      // schema for bookInfo element
      // {
      //   id: 0,
      //   title: "Harry Potter",
      //   author:  "J.K. Rowling",
      //   isbn10:  "21111111",
      //   description: "This a book",
      //   imgUrl:  "https://s1.nyt.com/du/books/images/9780385544184.jpg"
      // }
    }

  }

  componentDidMount(){
    // call to server api to check the items in db
    axios.get('http://localhost:3000/books')
    .then(response=>{
      if(response.data.length === 0){
        // if there are no items in db make call to NYT
        console.log('No elements in api calling NYT api');
        this.getNYTBooks();
      } else {
        // there are items just slap them in the client
        console.log(response.data);
        this.setState({ bookInfo: response.data });
      }
    })
    .catch(err=>{
      console.error(err);
    });
  }


  getNYTBooks(){
    // call the NYT api
    axios.get('https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=SOCAlRIHdoYLR2gGIUGknceo5m8rACnt')
    .then(response=>{
      console.log('Received NYT books');
      // console.log(response.data.results.books);
      this.setThisBooks(response.data.results.books);
    })
    .catch(err => console.error(err));
  }

  // the iterating and POST req works, but the cmp is not immediately updating with the response
  setThisBooks(bookList){
    // takes in array and populates this.state.booksInfo with info -- WILL OVERWRITE ALL THE BOOKS
    // don't use the tempList thing I don't think it's actually being appended to
    //bookList.forEach( bk => {
      let bk = bookList[0];
      axios.post('http://localhost:3000/books', {
        // id is generated by the DB don't explicitly set
        title: bk.title,
        author: bk.author,
        isbn10: bk.primary_isbn10,
        description: bk.description,
        imgUrl: bk.book_image
      }).then(response=>{
        console.log(response)
        // response is just the object that was saved
        this.setState(state => {
          return {
            bookInfo: [...state.bookInfo, response.data]
          }
        });
      })
      .catch(err=>console.error(err));
    //});
  }

  updateBook(){
    // makes api call to edit a book using PUT/PATCH
  }

  deleteBook(){
    // makes api to delete record from DB
  }

  render(){
    // make the list of book obj to pass into book info row component
    // try referring to instance variable

    // use map function to display all the rows
    let bookList = this.state.bookInfo.map( (bookObj,index) => {
      return <BookInfoRow key={index} book={bookObj}/>;
    });

    return (
      <div className="App">
        <header className="App-header">
          {/* <img src={logo} className="App-logo" alt="logo" />
          <p> Edit <code>src/App.js</code> and save to reload. </p>
          <a className="App-link" href="https://reactjs.org" target="_blank" rel="noopener noreferrer" > Learn React </a> */}
          <table className="container">
            <tbody>{bookList}</tbody>
          </table>
        </header>
      </div>
    )
  };
}

export default App;
